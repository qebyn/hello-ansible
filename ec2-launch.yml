---
- name: Create a micro instance
  hosts: localhost
  gather_facts: false
  vars:
    keypair: clavelucatic2
    instance_type: t2.micro
    security_group: sg-00f6a6f34d22821b4
    subnet_id: subnet-0618f5dbc5a4b2f81
    image: ami-0b752bf1df193a6c4
    region: eu-west-1
  tasks:
    - name: Launch instance
      amazon.aws.ec2_instance:
         key_name: "{{ keypair }}"
         security_group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         wait: true
         image_id: "{{ image }}"
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet_id }}"
         network:
           assign_public_ip: true
         count: 3
         tags:
           Environment: ansibleInstance
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 10
        sleep: 5
        timeout: 300
      vars:
        ansible_user: ec2-user
      loop: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: true
  gather_facts: true
  vars:
    ansible_user: ec2-user
  tasks:
    - name: Install httpd
      yum:
        name: httpd
        state: present
        update_cache: yes
    - name: Start httpd
      ansible.builtin.service:
        name: httpd
        state: started
    - name: Enable httpd
      ansible.builtin.service:
        name: httpd
        enabled: yes
    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: /home/sinensia/hello-2048/public_html/
        dest: /var/www/html/
        owner: apache
        group: apache
        mode: '0644'
        directory_mode: '0755'
